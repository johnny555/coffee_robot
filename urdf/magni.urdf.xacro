<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="magni">

  <xacro:arg name="raspicam_mount" default="forward"/>
  <xacro:property name="raspicam_mount" value="$(arg raspicam_mount)"/>

  <xacro:arg name="sonars_installed" default="true"/>
  <xacro:property name="sonars_installed" value="$(arg sonars_installed)"/>

  <xacro:arg name="camera_extrinsics_file" default="-"/>
  <xacro:property name="camera_extrinsics_file" value="$(arg camera_extrinsics_file)"/>

  <xacro:property name="wheel_r" value="0.1" />
  <xacro:property name="wheel_xpos" value="0.11" />


  <xacro:include filename="$(find magni_description)/urdf/magni.transmission.xacro" />
  <xacro:include filename="$(find magni_description)/urdf/magni.gazebo.xacro" />
  <xacro:include filename="$(find magni_description)/urdf/inertial.xacro" />
  <xacro:include filename="$(find magni_description)/urdf/sensors/sonar_hc-sr04.xacro" />
  <xacro:include filename="$(find magni_description)/urdf/sensors/raspi_camera.xacro" />


  <!-- Robot base_link -->
  <link name="base_link">
    <visual>
      <origin xyz="${-wheel_xpos} 0 ${-wheel_r+0.071}" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://magni_description/meshes/magni_body.dae" />
      </geometry>
    </visual>
	<visual>
      <origin xyz="${-wheel_xpos-0.169} 0.17 ${-wheel_r+0.09}" rpy="0 0 ${pi}" />
      <geometry>
        <mesh filename="package://magni_description/meshes/caster_wheel.dae" />
      </geometry>
    </visual>
	<visual>
      <origin xyz="${-wheel_xpos-0.169} -0.17 ${-wheel_r+0.09}" rpy="0 0 ${pi}" />
      <geometry>
        <mesh filename="package://magni_description/meshes/caster_wheel.dae" />
      </geometry>
    </visual>
    <collision>
	  <origin xyz="${-wheel_xpos} 0 ${-wheel_r+0.151}" rpy="0 0 0" />
      <geometry>
        <box size="0.398 0.268 0.160"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="${-wheel_xpos-0.026} 0 ${-wheel_r+0.248}" rpy="0 0 0" />
      <geometry>
        <box size="0.375 0.268 0.034"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="${-wheel_xpos-0.169} 0.169 ${-wheel_r+0.106}" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.07 0.07"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="${-wheel_xpos-0.169} -0.169 ${-wheel_r+0.106}" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.07 0.07"/>
      </geometry>
    </collision>
    <xacro:box_inertial_with_origin  x="0.398" y="0.221" z="0.150" mass="10.0">
      <origin xyz="-0.15 0 0.03" rpy="0 0 0" />
    </xacro:box_inertial_with_origin>
  </link>

  <!-- Fixed offset from the floor to the center of the wheels -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheel_r}" rpy="0 0 0"/>
  </joint>


  <!-- rplidar  -->
  <link name="rplidar">
    <visual>
      <geometry>
        <cylinder length="0.06" radius="0.038"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="near_black"/>
    </visual>
  </link>
  <joint name="rplidar_joint" type="fixed">

    <parent link="base_footprint"/>
    <child link="rplidar"/>
    <!-- <origin xyz="-0.047 0 0.3" rpy="0 0 0"/> -->
    <!-- moved in x by 2cm up in z by 2.5cm -->
    <origin xyz="-0.027 0 0.325" rpy="0 0 0"/>
    
  </joint>


  <!-- Macro for defining wheels -->
  <xacro:macro name="wheel" params="prefix reflect">
    <link name="${prefix}_wheel">
      <visual>
        <origin xyz="${-0.071*reflect} 0 0" rpy="0 ${(reflect-1)*pi/2} 0" />
        <geometry>
          <mesh filename="package://magni_description/meshes/front_wheel.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
        <geometry>
          <cylinder radius="${wheel_r}" length="0.05"/>
        </geometry>
      </collision>
      <collision>
        <origin xyz="${0.033*reflect} 0 0" rpy="0 ${pi/2} 0" />
        <geometry>
          <cylinder radius="0.064" length="0.016"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial_with_origin radius="${wheel_r}" length="0.05" mass="3.34">
        <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
      </xacro:cylinder_inertial_with_origin>
    </link>
    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="1 0 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="0 ${0.163*reflect} 0" rpy="0 0 ${pi/2}"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="left" reflect="1"/>
  <xacro:wheel prefix="right" reflect="-1"/>



  <!-- Macro for defining caster wheels -->
  <xacro:macro name="caster_wheel" params="prefix reflect">
    <link name="${prefix}_caster_wheel">
      <collision>
        <origin xyz="${-wheel_xpos-0.19} ${reflect*0.169} ${-wheel_r+0.04}" rpy="0 0 0" />
        <geometry>
          <sphere radius="0.04"/>
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_wheel_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_caster_wheel"/>
    </joint>
  </xacro:macro>

  <xacro:caster_wheel prefix="left" reflect="1"/>
  <xacro:caster_wheel prefix="right" reflect="-1"/>



  <!-- Define all sonars, if sonars_installed set to 1 -->
  <xacro:if value="${sonars_installed}">
    <xacro:sonar_hc-sr04 name="sonar_0" connected_to="base_link">
      <origin xyz="0.01 -0.14 0.15" rpy="0 0 ${-pi/2}"/>
    </xacro:sonar_hc-sr04>
    <xacro:sonar_hc-sr04 name="sonar_1" connected_to="base_link">
      <origin xyz="0.08 -0.07 0.15" rpy="0 0 0.785"/>
    </xacro:sonar_hc-sr04>
    <xacro:sonar_hc-sr04 name="sonar_2" connected_to="base_link">
      <origin xyz="0.08 -0.01 0.15" rpy="0 0 -0.785"/>
    </xacro:sonar_hc-sr04>
    <xacro:sonar_hc-sr04 name="sonar_3" connected_to="base_link">
      <origin xyz="0.08 0.04 0.15" rpy="0 0 0"/>
    </xacro:sonar_hc-sr04>
    <xacro:sonar_hc-sr04 name="sonar_4" connected_to="base_link">
      <origin xyz="0.01 0.14 0.15" rpy="0 0 ${pi/2}"/>
    </xacro:sonar_hc-sr04>
  </xacro:if>


  <!-- If we are given an extrinsics calibration use that instead of the pre-configured pose -->
 
    <!-- Define raspicam based on the raspicam_mount argument -->
    <!-- upward   Pointing straight up                        -->
   
      <xacro:raspi_camera name="raspicam" connected_to="base_link">
        <!-- <origin xyz="0.020 0.115 0.155" rpy="0 0 ${pi}"/> -->
        <!-- new camera mount is roughly deltas of x=+0.01 y=-0.01 z=+0.02   -->
        <origin xyz="0.03 0.105 0.175" rpy="0 0 -${pi/2}" />
      </xacro:raspi_camera>
   

</robot>
